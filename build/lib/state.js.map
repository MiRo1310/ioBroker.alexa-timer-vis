{
  "version": 3,
  "sources": ["../../src/lib/state.ts"],
  "sourcesContent": ["import { useStore } from '../store/store';\nimport { errorLogger } from './logging';\n\nexport const createState = async (value: number): Promise<void> => {\n    const store = useStore();\n    const _this = store._this;\n    try {\n        for (let i = 1; i <= value; i++) {\n            await _this.setObjectNotExistsAsync('all_Timer.alive', {\n                type: 'state',\n                common: {\n                    name: 'Is a Timer active?',\n                    type: 'boolean',\n                    role: 'indicator',\n                    read: true,\n                    write: false,\n                    def: false,\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.percent`, {\n                type: 'state',\n                common: {\n                    name: 'Percent',\n                    type: 'number',\n                    role: 'indicator',\n                    read: true,\n                    write: false,\n                    def: 0,\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.percent2`, {\n                type: 'state',\n                common: {\n                    name: 'Percent',\n                    type: 'number',\n                    role: 'indicator',\n                    read: true,\n                    write: false,\n                    def: 0,\n                },\n                native: {},\n            });\n\n            await _this.setObjectNotExistsAsync(`timer${i}.alive`, {\n                type: 'state',\n                common: {\n                    name: 'Timer active',\n                    type: 'boolean',\n                    role: 'indicator',\n                    read: true,\n                    write: false,\n                    def: false,\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.hour`, {\n                type: 'state',\n                common: {\n                    name: 'Hours',\n                    type: 'string',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                    def: '',\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.minute`, {\n                type: 'state',\n                common: {\n                    name: 'Minutes',\n                    type: 'string',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                    def: '',\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.second`, {\n                type: 'state',\n                common: {\n                    name: 'Seconds',\n                    type: 'string',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                    def: '',\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.string`, {\n                type: 'state',\n                common: {\n                    name: 'String',\n                    type: 'string',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                    def: '00:00:00 Std',\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.string_2`, {\n                type: 'state',\n                common: {\n                    name: 'String_2',\n                    type: 'string',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                    def: '',\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.name`, {\n                type: 'state',\n                common: {\n                    name: 'Name des Timers',\n                    type: 'string',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                    def: 'Timer',\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.TimeStart`, {\n                type: 'state',\n                common: {\n                    name: 'Start Time',\n                    type: 'string',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                    def: '00:00:00',\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.TimeEnd`, {\n                type: 'state',\n                common: {\n                    name: 'End Time',\n                    type: 'string',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                    def: '00:00:00',\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.InputDeviceName`, {\n                type: 'state',\n                common: {\n                    name: 'Input of Device',\n                    type: 'string',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                    def: '',\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.Reset`, {\n                type: 'state',\n                common: {\n                    name: 'Reset Timer',\n                    type: 'boolean',\n                    role: 'button',\n                    read: true,\n                    write: true,\n                    def: false,\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.lengthTimer`, {\n                type: 'state',\n                common: {\n                    name: 'Gestellter Timer',\n                    type: 'string',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                    def: '',\n                },\n                native: {},\n            });\n            await _this.setObjectNotExistsAsync(`timer${i}.json`, {\n                type: 'state',\n                common: {\n                    name: 'json',\n                    type: 'string',\n                    role: 'json',\n                    read: true,\n                    write: false,\n                    def: '',\n                },\n                native: {},\n            });\n\n            const id = `alexa-timer-vis.${_this.instance}.timer${i}.Reset`;\n\n            _this.subscribeForeignStates(id);\n        }\n    } catch (e: any) {\n        errorLogger('Error in createState', e, _this);\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
