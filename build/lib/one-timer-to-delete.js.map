{
  "version": 3,
  "sources": ["../../src/lib/one-timer-to-delete.ts"],
  "sourcesContent": ["import { timerObject } from '../config/timer-data';\nimport { sortArray } from './global';\n\nexport const oneOfMultiTimerDelete = (input: string, timeSec: number, name: string, inputDevice: string): void => {\n    const separateInput = input.slice(input.indexOf(',') + 2, input.length);\n\n    const separateInputArray = separateInput.split(' ');\n    let timerNumber;\n\n    // \u00DCber pr\u00FCfen ob die Antwort eine Zahl ist oder ein Name\n    for (const element of separateInputArray) {\n        if (timerObject.zuweisung[element as keyof typeof timerObject.zuweisung] > 0) {\n            // Es handelt sich um eine Zahl die im Array gefunden wurde\n\n            timerNumber = timerObject.zuweisung[element as keyof typeof timerObject.zuweisung];\n        } else {\n            name = separateInput.replace('timer', '').trim();\n            timerNumber = 0;\n        }\n    }\n\n    let sortable = [];\n    for (const element in timerObject.timer) {\n        sortable.push([\n            element,\n\n            timerObject.timer[element as keyof typeof timerObject.timer].voiceInputAsSeconds,\n            timerObject.timer[element as keyof typeof timerObject.timer].remainingTimeInSeconds,\n            timerObject.timer[element as keyof typeof timerObject.timer].name,\n            timerObject.timer[element as keyof typeof timerObject.timer].inputDevice,\n        ]);\n    }\n\n    sortable = sortArray(sortable); // Das Array in dem die Timer sind nach der Gr\u00F6\u00DFe sortieren und dann das entsprechende Element stoppen\n\n    let i = 1;\n\n    for (const element of sortable) {\n        if (element[1] == timeSec && timerNumber == i) {\n            // Auf Zeit \u00FCberpr\u00FCfen\n            timerObject.timerActive.timer[element[0] as keyof typeof timerObject.timerActive.timer] = false;\n            break;\n        } else if (element[3] == name && timerNumber == i) {\n            // Auf Name \u00FCberpr\u00FCfen\n            timerObject.timerActive.timer[element[0] as keyof typeof timerObject.timerActive.timer] = false;\n            break;\n        } else if (element[3] == name && timerNumber == 0) {\n            // Auf Name \u00FCberpr\u00FCfen, wenn der Name in der Antwort vor kam\n            timerObject.timerActive.timer[element[0] as keyof typeof timerObject.timerActive.timer] = false;\n            break;\n        } else if (element[4] == inputDevice && timerNumber == i) {\n            // Auf Device \u00FCberpr\u00FCfen\n            timerObject.timerActive.timer[element[0] as keyof typeof timerObject.timerActive.timer] = false;\n            break;\n        } else if (inputDevice == '' && timeSec == 0 && name == '' && timerNumber == i) {\n            // Wenn kein Angaben vor liegen\n            timerObject.timerActive.timer[element[0] as keyof typeof timerObject.timerActive.timer] = false;\n            break;\n        } else {\n            i++;\n        }\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4B;AAC5B,oBAA0B;AAEnB,MAAM,wBAAwB,CAAC,OAAe,SAAiB,MAAc,gBAA8B;AAC9G,QAAM,gBAAgB,MAAM,MAAM,MAAM,QAAQ,GAAG,IAAI,GAAG,MAAM,MAAM;AAEtE,QAAM,qBAAqB,cAAc,MAAM,GAAG;AAClD,MAAI;AAGJ,aAAW,WAAW,oBAAoB;AACtC,QAAI,8BAAY,UAAU,OAA6C,IAAI,GAAG;AAG1E,oBAAc,8BAAY,UAAU,OAA6C;AAAA,IACrF,OAAO;AACH,aAAO,cAAc,QAAQ,SAAS,EAAE,EAAE,KAAK;AAC/C,oBAAc;AAAA,IAClB;AAAA,EACJ;AAEA,MAAI,WAAW,CAAC;AAChB,aAAW,WAAW,8BAAY,OAAO;AACrC,aAAS,KAAK;AAAA,MACV;AAAA,MAEA,8BAAY,MAAM,OAAyC,EAAE;AAAA,MAC7D,8BAAY,MAAM,OAAyC,EAAE;AAAA,MAC7D,8BAAY,MAAM,OAAyC,EAAE;AAAA,MAC7D,8BAAY,MAAM,OAAyC,EAAE;AAAA,IACjE,CAAC;AAAA,EACL;AAEA,iBAAW,yBAAU,QAAQ;AAE7B,MAAI,IAAI;AAER,aAAW,WAAW,UAAU;AAC5B,QAAI,QAAQ,CAAC,KAAK,WAAW,eAAe,GAAG;AAE3C,oCAAY,YAAY,MAAM,QAAQ,CAAC,CAA+C,IAAI;AAC1F;AAAA,IACJ,WAAW,QAAQ,CAAC,KAAK,QAAQ,eAAe,GAAG;AAE/C,oCAAY,YAAY,MAAM,QAAQ,CAAC,CAA+C,IAAI;AAC1F;AAAA,IACJ,WAAW,QAAQ,CAAC,KAAK,QAAQ,eAAe,GAAG;AAE/C,oCAAY,YAAY,MAAM,QAAQ,CAAC,CAA+C,IAAI;AAC1F;AAAA,IACJ,WAAW,QAAQ,CAAC,KAAK,eAAe,eAAe,GAAG;AAEtD,oCAAY,YAAY,MAAM,QAAQ,CAAC,CAA+C,IAAI;AAC1F;AAAA,IACJ,WAAW,eAAe,MAAM,WAAW,KAAK,QAAQ,MAAM,eAAe,GAAG;AAE5E,oCAAY,YAAY,MAAM,QAAQ,CAAC,CAA+C,IAAI;AAC1F;AAAA,IACJ,OAAO;AACH;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": []
}
