{
  "version": 3,
  "sources": ["../../src/lib/write-state.ts"],
  "sourcesContent": ["import type { Timer, TimerSelector } from '../types/types';\n\nimport { timerObject } from '../config/timer-data';\nimport { firstLetterToUpperCase } from './global';\nimport { resetValues } from './reset';\nimport { useStore } from '../store/store';\nimport { deepCopy } from './object';\nimport { errorLogger } from './logging';\n\nexport async function writeState({ reset }: { reset: boolean }): Promise<void> {\n    const store = useStore();\n    const _this = store._this;\n    const timers = timerObject.timerActive.timer;\n    try {\n        for (const element in timers) {\n            const timer = timerObject.timer[element as keyof typeof timerObject.timer];\n\n            if (!timer) {\n                return;\n            }\n\n            let alive = true;\n            if (reset) {\n                await resetValues(timer, element as TimerSelector);\n                alive = false;\n            }\n\n            _this.setStateChanged(\n                `${element}.alive`,\n                timerObject.timerActive.timer[element as keyof typeof timerObject.timer],\n                true,\n            );\n\n            _this.setStateChanged(`${element}.hour`, timer.hour, true);\n            _this.setStateChanged(`${element}.minute`, timer.minute, true);\n            _this.setStateChanged(`${element}.second`, timer.second, true);\n            _this.setStateChanged(`${element}.string`, timer.stringTimer, true);\n            _this.setStateChanged(`${element}.string_2`, timer.stringTimer2, true);\n            _this.setStateChanged(`${element}.TimeStart`, timer.startTimeString, true);\n            _this.setStateChanged(`${element}.TimeEnd`, timer.endTimeString, true);\n            _this.setStateChanged(`${element}.InputDeviceName`, timer.inputDevice, true);\n            _this.setStateChanged(`${element}.lengthTimer`, timer.lengthTimer, true);\n            _this.setStateChanged(`${element}.percent2`, timer.percent2, true);\n            _this.setStateChanged(`${element}.percent`, timer.percent, true);\n            _this.setStateChanged(`${element}.name`, getTimerName(timer), true);\n            _this.setStateChanged(`${element}.json`, getJson(timer), true);\n            _this.setStateChanged('all_Timer.alive', alive, true);\n        }\n    } catch (e: any) {\n        errorLogger('Error in writeState', e, _this);\n    }\n\n    function getJson(timer: Timer): ioBroker.State | ioBroker.StateValue | ioBroker.SettableState {\n        const copy = deepCopy(timer);\n        delete (copy as any).extendOrShortenTimer;\n        return JSON.stringify(copy);\n    }\n}\n\nfunction getTimerName(timer: Timer): string {\n    if (timer.alexaTimerName) {\n        return firstLetterToUpperCase(`${timer.alexaTimerName} Timer`);\n    }\n\n    if (timer.name !== 'Timer') {\n        return `${firstLetterToUpperCase(timer.name)} Timer`;\n    }\n\n    return 'Timer';\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,wBAA4B;AAC5B,oBAAuC;AACvC,mBAA4B;AAC5B,mBAAyB;AACzB,oBAAyB;AACzB,qBAA4B;AAE5B,eAAsB,WAAW,EAAE,MAAM,GAAsC;AAC3E,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AACpB,QAAM,SAAS,8BAAY,YAAY;AACvC,MAAI;AACA,eAAW,WAAW,QAAQ;AAC1B,YAAM,QAAQ,8BAAY,MAAM,OAAyC;AAEzE,UAAI,CAAC,OAAO;AACR;AAAA,MACJ;AAEA,UAAI,QAAQ;AACZ,UAAI,OAAO;AACP,kBAAM,0BAAY,OAAO,OAAwB;AACjD,gBAAQ;AAAA,MACZ;AAEA,YAAM;AAAA,QACF,GAAG,OAAO;AAAA,QACV,8BAAY,YAAY,MAAM,OAAyC;AAAA,QACvE;AAAA,MACJ;AAEA,YAAM,gBAAgB,GAAG,OAAO,SAAS,MAAM,MAAM,IAAI;AACzD,YAAM,gBAAgB,GAAG,OAAO,WAAW,MAAM,QAAQ,IAAI;AAC7D,YAAM,gBAAgB,GAAG,OAAO,WAAW,MAAM,QAAQ,IAAI;AAC7D,YAAM,gBAAgB,GAAG,OAAO,WAAW,MAAM,aAAa,IAAI;AAClE,YAAM,gBAAgB,GAAG,OAAO,aAAa,MAAM,cAAc,IAAI;AACrE,YAAM,gBAAgB,GAAG,OAAO,cAAc,MAAM,iBAAiB,IAAI;AACzE,YAAM,gBAAgB,GAAG,OAAO,YAAY,MAAM,eAAe,IAAI;AACrE,YAAM,gBAAgB,GAAG,OAAO,oBAAoB,MAAM,aAAa,IAAI;AAC3E,YAAM,gBAAgB,GAAG,OAAO,gBAAgB,MAAM,aAAa,IAAI;AACvE,YAAM,gBAAgB,GAAG,OAAO,aAAa,MAAM,UAAU,IAAI;AACjE,YAAM,gBAAgB,GAAG,OAAO,YAAY,MAAM,SAAS,IAAI;AAC/D,YAAM,gBAAgB,GAAG,OAAO,SAAS,aAAa,KAAK,GAAG,IAAI;AAClE,YAAM,gBAAgB,GAAG,OAAO,SAAS,QAAQ,KAAK,GAAG,IAAI;AAC7D,YAAM,gBAAgB,mBAAmB,OAAO,IAAI;AAAA,IACxD;AAAA,EACJ,SAAS,GAAQ;AACb,oCAAY,uBAAuB,GAAG,KAAK;AAAA,EAC/C;AAEA,WAAS,QAAQ,OAA6E;AAC1F,UAAM,WAAO,wBAAS,KAAK;AAC3B,WAAQ,KAAa;AACrB,WAAO,KAAK,UAAU,IAAI;AAAA,EAC9B;AACJ;AAEA,SAAS,aAAa,OAAsB;AACxC,MAAI,MAAM,gBAAgB;AACtB,eAAO,sCAAuB,GAAG,MAAM,cAAc,QAAQ;AAAA,EACjE;AAEA,MAAI,MAAM,SAAS,SAAS;AACxB,WAAO,OAAG,sCAAuB,MAAM,IAAI,CAAC;AAAA,EAChD;AAEA,SAAO;AACX;",
  "names": []
}
