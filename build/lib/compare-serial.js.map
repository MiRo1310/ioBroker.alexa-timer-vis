{
  "version": 3,
  "sources": ["../../src/lib/compare-serial.ts"],
  "sourcesContent": ["import { useStore } from '../store/store';\nimport { isIobrokerValue } from './global';\nimport { errorLogger } from './logging';\n\nlet oldCreationTime: ioBroker.StateValue | null;\nlet oldSerial: string;\n\nexport const compareCreationTimeAndSerial = async (): Promise<{\n    sameTime: boolean;\n    sameSerial: boolean;\n}> => {\n    const store = useStore();\n    const _this = store._this;\n\n    try {\n        const creationTime = await _this.getForeignStateAsync('alexa2.0.History.creationTime');\n        const serial = await _this.getForeignStateAsync('alexa2.0.History.serialNumber');\n\n        let isSameTime = false;\n        let isSameSerial = false;\n\n        if (isIobrokerValue(creationTime)) {\n            if (oldCreationTime == creationTime.val) {\n                isSameTime = true;\n            }\n            oldCreationTime = creationTime.val;\n        }\n        if (isIobrokerValue(serial)) {\n            if (oldSerial == serial.val) {\n                isSameSerial = true;\n            }\n\n            oldSerial = serial.val as string;\n        }\n\n        return { sameTime: isSameTime, sameSerial: isSameSerial };\n    } catch (error: any) {\n        errorLogger('Error in compareCreationTimeAndSerial', error, _this);\n        return { sameTime: false, sameSerial: false };\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,oBAAgC;AAChC,qBAA4B;AAE5B,IAAI;AACJ,IAAI;AAEG,MAAM,+BAA+B,YAGtC;AACF,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AAEpB,MAAI;AACA,UAAM,eAAe,MAAM,MAAM,qBAAqB,+BAA+B;AACrF,UAAM,SAAS,MAAM,MAAM,qBAAqB,+BAA+B;AAE/E,QAAI,aAAa;AACjB,QAAI,eAAe;AAEnB,YAAI,+BAAgB,YAAY,GAAG;AAC/B,UAAI,mBAAmB,aAAa,KAAK;AACrC,qBAAa;AAAA,MACjB;AACA,wBAAkB,aAAa;AAAA,IACnC;AACA,YAAI,+BAAgB,MAAM,GAAG;AACzB,UAAI,aAAa,OAAO,KAAK;AACzB,uBAAe;AAAA,MACnB;AAEA,kBAAY,OAAO;AAAA,IACvB;AAEA,WAAO,EAAE,UAAU,YAAY,YAAY,aAAa;AAAA,EAC5D,SAAS,OAAY;AACjB,oCAAY,yCAAyC,OAAO,KAAK;AACjE,WAAO,EAAE,UAAU,OAAO,YAAY,MAAM;AAAA,EAChD;AACJ;",
  "names": []
}
