{
  "version": 3,
  "sources": ["../../src/lib/filter-info.ts"],
  "sourcesContent": ["import { useStore } from '../store/store';\nimport { firstLetterToUpperCase, countOccurrences } from './global';\nimport { errorLogger } from './logging';\nimport { timerObject } from '../config/timer-data';\n\nexport const filterInfo = (\n    input: string[],\n): {\n    timerString: string;\n    name: string;\n    deleteVal: number;\n    inputString: string;\n} => {\n    const store = useStore();\n    const _this = store._this;\n    try {\n        let timerString = '';\n        let inputString = '';\n        let name = '';\n        let deleteVal = 0; // 1 = deleteTimer, 2 = stopAll\n\n        input.forEach((element: string) => {\n            const data = timerObject.timerActive.data;\n\n            if (data.notNoted.indexOf(element) >= 0) {\n                return;\n            }\n\n            if (store.isDeleteTimer()) {\n                deleteVal++;\n            } else if (data.stopAll.indexOf(element) >= 0) {\n                deleteVal++;\n            } else if (data.connector.indexOf(element) >= 0) {\n                if (timerString.charAt(timerString.length - 1) !== '+') {\n                    timerString += '+';\n                    inputString += 'und ';\n                }\n            } else if (data.hour.indexOf(element) >= 0) {\n                timerString += ')*3600+';\n                inputString += `${firstLetterToUpperCase(element)} `;\n            } else if (data.minute.indexOf(element) >= 0) {\n                timerString += ')*60+';\n                inputString += 'Minuten ';\n            } else if (data.second.indexOf(element) >= 0 && timerString.charAt(timerString.length - 1) != ')') {\n                // Nach Sekunden suchen, um die Klammern zu schliessen( Wichtig f\u00FCr z.B. 120 Minuten), aber nur wenn als letztes nicht schon eine Klammer ist\n                timerString += ')';\n                inputString += 'Sekunden ';\n            } else if (timerObject.brueche1[element as keyof typeof timerObject.brueche1]) {\n                // Wenn als letztes vor dem Bruch nichts war, soll die eins hinzugef\u00FCgt werden\n                if (timerString.charAt(timerString.length - 1) == '') {\n                    timerString += '(1';\n                }\n                timerString += `*${timerObject.brueche1[element as keyof typeof timerObject.brueche1]})*60`;\n            } else if (timerObject.brueche2[element as keyof typeof timerObject.brueche2] > 0) {\n                // Wenn als letztes vor dem Bruch nichts war, soll die eins hinzugef\u00FCgt werden\n                if (timerString.charAt(timerString.length - 1) == '') {\n                    timerString += '(1';\n                }\n                timerString += `*${timerObject.brueche2[element as keyof typeof timerObject.brueche2]})*3600`;\n            } else if (timerObject.zahlen[element as keyof typeof timerObject.zahlen] > 0) {\n                // \u00DCberpr\u00FCfen ob es sich um Zahlen handelt\n                // Wenn in der Variable als letztes keine Ziffer ist, darf eine neue zahl hinzugef\u00FCgt werden\n                if (timerObject.ziffern.indexOf(timerString.charAt(timerString.length - 1)) == -1) {\n                    // Wenn als letztes ein \"faktor f\u00FCr stunde oder minute und +\"  ist darf keine zus\u00E4tzliche klammer eingef\u00FCgt werden\n                    if (\n                        (timerString.charAt(timerString.length - 1) != '*3600+' ||\n                            timerString.charAt(timerString.length - 1) != '*60+') &&\n                        timerString.charAt(timerString.length - 3) != '('\n                    ) {\n                        timerString += `(${timerObject.zahlen[element as keyof typeof timerObject.zahlen]}`;\n                    } else {\n                        timerString += timerObject.zahlen[element as keyof typeof timerObject.zahlen];\n                    }\n                    inputString += `${timerObject.zahlen[element as keyof typeof timerObject.zahlen]} `;\n                    // Wenn das Element \"Hundert\" ist und das letzte Element eine Zahl war soll multipliziert werden( Zwei * hundert + vierzig)\n                } else if (element == 'hundert') {\n                    timerString += `*${timerObject.zahlen[element as keyof typeof timerObject.zahlen]}`;\n                    inputString += `${timerObject.zahlen[element as keyof typeof timerObject.zahlen]} `;\n                } else {\n                    // Wenn nicht Hundert(eigentlich auch tausend usw.) dann nur addieren\n\n                    timerString += `+${timerObject.zahlen[element as keyof typeof timerObject.zahlen]}`;\n                    inputString += `${timerObject.zahlen[element as keyof typeof timerObject.zahlen]} `;\n                }\n            } else if (parseInt(element)) {\n                const number = parseInt(element);\n                if (timerString == '') {\n                    timerString = '(';\n                }\n                if (timerString.endsWith('+')) {\n                    timerString += '(';\n                }\n                timerString += number;\n                inputString += number;\n            } else if (!(store.isShortenTimer() || store.isExtendTimer())) {\n                // Wenn nichts zutrifft, und der Wert auch nicht in extend und shorten gefunden wird,  kann es sich nur noch um den Namen des Timers handeln\n                name = element.trim();\n            }\n        });\n        if (timerString.charAt(timerString.length - 1) == '+') {\n            timerString = timerString.slice(0, timerString.length - 1);\n        }\n        if (input.length) {\n            timerString = hasMinutes(timerString);\n            timerString = checkFirstChart(timerString);\n        }\n        if (countOccurrences(timerString, ')') > countOccurrences(timerString, '(')) {\n            timerString = `(${timerString}`;\n        }\n\n        return { timerString, name, deleteVal, inputString };\n    } catch (e: any) {\n        errorLogger('Error in filterInfo', e, _this);\n        return { timerString: '', name: '', deleteVal: 0, inputString: '' };\n    }\n\n    function hasMinutes(timerString: string): string {\n        if (timerString.includes('*3600')) {\n            if (\n                !timerString.includes('*60') &&\n                timerString.slice(timerString.length - 5, timerString.length) != '*3600' &&\n                timerString.charAt(timerString.length - 1) != ')'\n            ) {\n                timerString += ')*60';\n            }\n        }\n        return timerString;\n    }\n\n    function checkFirstChart(timerString: string): string {\n        if (timerString.charAt(0) == ')') {\n            timerString = timerString.slice(2, timerString.length);\n        }\n        return timerString;\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
