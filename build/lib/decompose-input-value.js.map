{
  "version": 3,
  "sources": ["../../src/lib/decompose-input-value.ts"],
  "sourcesContent": ["import { useStore } from '../store/store';\nimport { filterInfo } from './filter-info';\nimport { errorLogger } from './logging';\n\nexport const decomposeInputValue = (\n    voiceString: string,\n): {\n    name: string;\n    timerSec: number;\n    deleteVal: number;\n    inputString: string;\n} => {\n    const store = useStore();\n    const _this = store._this;\n\n    try {\n        let inputDecomposed = voiceString.split(',');\n        inputDecomposed = inputDecomposed[0].split(' ');\n\n        const { timerString, name, deleteVal, inputString } = filterInfo(inputDecomposed);\n\n        return { name, timerSec: eval(timerString), deleteVal, inputString };\n    } catch (e: any) {\n        errorLogger('Error in decomposeInputValue: ', e, _this);\n        return { name: '', timerSec: 0, deleteVal: 0, inputString: '' };\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,yBAA2B;AAC3B,qBAA4B;AAErB,MAAM,sBAAsB,CAC/B,gBAMC;AACD,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AAEpB,MAAI;AACA,QAAI,kBAAkB,YAAY,MAAM,GAAG;AAC3C,sBAAkB,gBAAgB,CAAC,EAAE,MAAM,GAAG;AAE9C,UAAM,EAAE,aAAa,MAAM,WAAW,YAAY,QAAI,+BAAW,eAAe;AAEhF,WAAO,EAAE,MAAM,UAAU,KAAK,WAAW,GAAG,WAAW,YAAY;AAAA,EACvE,SAAS,GAAQ;AACb,oCAAY,kCAAkC,GAAG,KAAK;AACtD,WAAO,EAAE,MAAM,IAAI,UAAU,GAAG,WAAW,GAAG,aAAa,GAAG;AAAA,EAClE;AACJ;",
  "names": []
}
