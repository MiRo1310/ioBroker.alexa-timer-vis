{
  "version": 3,
  "sources": ["../../src/lib/global.ts"],
  "sourcesContent": ["import type { Store } from '../types/types';\nimport { useStore } from '../store/store';\n\nexport const secToHourMinSec = (\n    valSec: number,\n    doubleInt: boolean,\n): {\n    hour: string;\n    minutes: string;\n    seconds: string;\n    string: string;\n} => {\n    const store = useStore();\n\n    const { hourInSec, hour } = includedHours(valSec);\n    const { minutesInSec, minutes } = includedMinutes(valSec, hourInSec);\n    const seconds = includedSeconds(valSec, hourInSec, minutesInSec);\n\n    const { hourString, minutesString, secondsString } = getDoubleIntValues(doubleInt, hour, minutes, seconds);\n\n    const hourUnit = getHourUnit(hour, store);\n    const minuteUnit = getMinuteUnit(minutes, store);\n    const secUnit = getSecondUnit(seconds, store);\n\n    const string = `${hour} ${hourUnit} ${minutes} ${minuteUnit} ${seconds} ${secUnit}`;\n\n    return { hour: hourString, minutes: minutesString, seconds: secondsString, string: string.trim() };\n};\n\nfunction getSecondUnit(seconds: number, store: Store): string {\n    if (seconds && seconds > 1) {\n        return store.unitSecond2;\n    }\n    return store.unitSecond1;\n}\n\nfunction getMinuteUnit(minutes: number, store: Store): string {\n    if (minutes && minutes > 1) {\n        return store.unitMinute2;\n    }\n    return store.unitMinute1;\n}\n\nfunction getHourUnit(hour: number, store: Store): string {\n    if (hour && hour > 1) {\n        return store.unitHour2;\n    }\n    return store.unitHour1;\n}\n\nfunction getDoubleIntValues(\n    doubleInt: boolean,\n    hour: number,\n    minutes: number,\n    seconds: number,\n): { hourString: string; minutesString: string; secondsString: string } {\n    if (doubleInt) {\n        return {\n            hourString: `0${hour}`.slice(-2),\n            minutesString: `0${minutes}`.slice(-2),\n            secondsString: `0${seconds}`.slice(-2),\n        };\n    }\n    return {\n        hourString: hour?.toString() || '',\n        minutesString: minutes?.toString() || '',\n        secondsString: seconds?.toString() || '',\n    };\n}\n\nfunction includedSeconds(valSec: number, hourInSec: number, minutesInSec: number): number {\n    let seconds = valSec - hourInSec - minutesInSec;\n    seconds = Math.round(seconds);\n    return seconds;\n}\n\nfunction includedMinutes(valSec: number, hourInSec: number): { minutesInSec: number; minutes: number } {\n    let minutes = (valSec - hourInSec) / 60;\n    minutes = Math.floor(minutes);\n    const minutesInSec = minutes * 60;\n    return { minutesInSec, minutes };\n}\n\nfunction includedHours(valSec: number): { hourInSec: number; hour: number } {\n    let hour = valSec / (60 * 60);\n    hour = Math.floor(hour);\n    const hourInSec = hour * 60 * 60;\n    return { hourInSec, hour };\n}\n\nexport function firstLetterToUpperCase(name: string): string {\n    if (name.length === 0) {\n        return '';\n    }\n    if (name.length === 1) {\n        return name.toUpperCase();\n    }\n\n    return name.slice(0, 1).toUpperCase() + name.slice(1); // Erster Buchstabe in Gro\u00DF + ReststartTimer\n}\n\nexport function timeToString(milliseconds: number): string {\n    const date_string = new Date(milliseconds).toString();\n    return date_string.split(' ').slice(4, 5).toString();\n}\n\nexport function isAlexaSummaryStateChanged({\n    state,\n    id,\n}: {\n    state?: ioBroker.State | null;\n    id: string;\n}): boolean | null | undefined {\n    const store = useStore();\n    return state && isString(state.val) && state.val !== '' && id === store.pathAlexaStateToListenTo;\n}\n\nexport function doesAlexaSendAQuestion(voiceInput: string): void {\n    const store = useStore();\n    store.questionAlexa = voiceInput.indexOf(',') != -1;\n}\n\nexport const isStringEmpty = (str: string): boolean => {\n    return str === '';\n};\n\nexport function isString(str?: string | number | boolean | object | null): str is string {\n    return typeof str == 'string';\n}\n\nexport function isIobrokerValue(obj: ioBroker.State | null | undefined): obj is ioBroker.State {\n    const result = obj && obj.val !== null && obj.val !== undefined;\n    return !!result;\n}\n\nexport function sortArray(array: any[]): any[] {\n    return array.sort(function (a: any[], b: any[]) {\n        return a[2] - b[2];\n    });\n}\n\nexport function countOccurrences(str: string, char: string): number {\n    return str.split(char).length - 1;\n}\n"],
  "mappings": "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",
  "names": []
}
